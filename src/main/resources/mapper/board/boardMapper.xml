<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board.board_project.mapper.board.BoardMapper">

    <!-- 글 등록 -->
    <insert id="saveBoard"
            parameterType="board.board_project.dto.request.board.SaveBoardDTO"
            useGeneratedKeys="true"
            keyProperty="board_no">
        INSERT INTO bt_tb_board(
                category_cd,
                title,
                cont,
                writer_nm,
                password,
                view_cnt,
                reg_dt
        )
        VALUES(
                #{category_cd},
                #{title},
                #{cont},
                #{writer_nm},
                #{password},
                0,
                now()
        )
    </insert>

    <!-- 글 상세 데이터 GET -->
    <select id="getBoardDetail" parameterType="int" resultType="board.board_project.dto.response.board.BoardDetailDTO">
        SELECT board_no,
               category_cd,
               title,
               cont,
               writer_nm,
               password,
               reg_dt
        FROM bt_tb_board
        WHERE board_no = #{board_no}
    </select>

    <!-- 비밀번호 가져오기 -->
    <select id="getBoardPw" resultType="String">
        SELECT password
        FROM bt_tb_board
        WHERE board_no = #{board_no}
    </select>

    <!-- 글 수정 -->
    <update id="updateBoard" parameterType="board.board_project.dto.request.board.UpdateBoardDTO">
        UPDATE bt_tb_board
        SET category_cd = #{category_cd},
            title = #{title},
            cont = #{cont},
            mod_dt = now()
        WHERE board_no = #{board_no}
    </update>

    <!-- 글 삭제 -->
    <delete id="deleteBoard" parameterType="int">
        DELETE FROM bt_tb_board
        WHERE board_no = #{board_no}
    </delete>

    <!-- 검색 조건 재사용 위한 sql -->
    <sql id="searchBoardList">
        <where>
            <!-- 카테고리 타입별 list -> 전체면 굳이 줄 필요 없음-->
            <if test="searchCategoryType != null and searchCategoryType != '' and searchCategoryType != 'ALL'">
                category_cd = #{searchCategoryType}
            </if>

            <!-- 검색 타입별 list-->
            <if test="searchType != null and searchType != '' and searchKeyword != null and searchKeyword != ''">
                <choose>
                    <when test="searchType == 'all'">
                        <!-- 전체(제목, 내용, 작성자명) list-->
                        AND (
                        title LIKE CONCAT('%', #{searchKeyword}, '%')
                        OR cont LIKE CONCAT('%', #{searchKeyword}, '%')
                        OR writer_nm LIKE CONCAT('%', #{searchKeyword}, '%')
                        )
                    </when>
                    <when test="searchType == 'title'">
                        <!-- 제목 list-->
                        AND title LIKE CONCAT('%', #{searchKeyword}, '%')
                    </when>
                    <when test="searchType == 'cont'">
                        <!-- 내용 list-->
                        AND cont LIKE CONCAT('%', #{searchKeyword}, '%')
                    </when>
                    <when test="searchType == 'titleCont'">
                        <!-- 제목+내용 list-->
                        AND (
                        title LIKE CONCAT('%', #{searchKeyword}, '%')
                        OR cont LIKE CONCAT('%', #{searchKeyword}, '%')
                        )
                    </when>
                    <when test="searchType == 'writer'">
                        <!-- 작성자명 list-->
                        AND writer_nm LIKE CONCAT('%', #{searchKeyword}, '%')
                    </when>
                </choose>
            </if>
        </where>
    </sql>

    <!-- 전체 글 데이터 GET -->
    <select id="getBoardList" parameterType="board.board_project.dto.request.board.SearchBoardDTO" resultType="board.board_project.dto.response.board.BoardListDTO">
        SELECT board_no,
               category_cd,
               title,
               writer_nm,
               view_cnt,
               DATE_FORMAT(reg_dt, '%Y-%m-%d') AS reg_dt
        FROM bt_tb_board
        <include refid="searchBoardList"/>
        ORDER BY
        <!-- 정렬 타입별 list-->
        <choose>
            <when test="sortType == 'latest'">
                board_no DESC
            </when>
            <when test="sortType == 'hit'">
                view_cnt DESC
            </when>
            <otherwise>
                board_no DESC
            </otherwise>
        </choose>
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 총 데이터 갯수 GET -->
    <select id="getTotalListAmount" parameterType="board.board_project.dto.request.board.SearchBoardDTO" resultType="int">
        SELECT COUNT(board_no)
        FROM bt_tb_board
        <include refid="searchBoardList"/>
    </select>

    <!-- 조회수 -->
    <update id="viewCount" parameterType="int">
        UPDATE bt_tb_board
        SET view_cnt = view_cnt + 1
        WHERE board_no = #{board_no}
    </update>
</mapper>